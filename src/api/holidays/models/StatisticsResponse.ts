/* tslint:disable */
/* eslint-disable */
/**
 * OpenHolidays API v1
 * Open Data API for public and school holidays
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Statistical data of the holidays database
 * @export
 * @interface StatisticsResponse
 */
export interface StatisticsResponse {
    /**
     * The youngest holiday start date in the database
     * @type {Date}
     * @memberof StatisticsResponse
     */
    youngestStartDate: Date;
    /**
     * The oldest holiday start date in the database
     * @type {Date}
     * @memberof StatisticsResponse
     */
    oldestStartDate: Date;
}

/**
 * Check if a given object implements the StatisticsResponse interface.
 */
export function instanceOfStatisticsResponse(value: object): value is StatisticsResponse {
    if (!('youngestStartDate' in value) || value['youngestStartDate'] === undefined) return false;
    if (!('oldestStartDate' in value) || value['oldestStartDate'] === undefined) return false;
    return true;
}

export function StatisticsResponseFromJSON(json: any): StatisticsResponse {
    return StatisticsResponseFromJSONTyped(json, false);
}

export function StatisticsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatisticsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'youngestStartDate': (new Date(json['youngestStartDate'])),
        'oldestStartDate': (new Date(json['oldestStartDate'])),
    };
}

export function StatisticsResponseToJSON(json: any): StatisticsResponse {
    return StatisticsResponseToJSONTyped(json, false);
}

export function StatisticsResponseToJSONTyped(value?: StatisticsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'youngestStartDate': ((value['youngestStartDate']).toISOString().substring(0,10)),
        'oldestStartDate': ((value['oldestStartDate']).toISOString().substring(0,10)),
    };
}

