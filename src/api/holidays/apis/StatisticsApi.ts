/* tslint:disable */
/* eslint-disable */
/**
 * OpenHolidays API v1
 * Open Data API for public and school holidays
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  StatisticsResponse,
} from '../models/index';
import {
    StatisticsResponseFromJSON,
    StatisticsResponseToJSON,
} from '../models/index';

export interface StatisticsPublicHolidaysGetRequest {
    countryIsoCode: string;
    subdivisionCode?: string;
}

export interface StatisticsSchoolHolidaysGetRequest {
    countryIsoCode: string;
    subdivisionCode?: string;
}

/**
 * 
 */
export class StatisticsApi extends runtime.BaseAPI {

    /**
     * Returns statistical data about public holidays for a given country.
     */
    async statisticsPublicHolidaysGetRaw(requestParameters: StatisticsPublicHolidaysGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatisticsResponse>> {
        if (requestParameters['countryIsoCode'] == null) {
            throw new runtime.RequiredError(
                'countryIsoCode',
                'Required parameter "countryIsoCode" was null or undefined when calling statisticsPublicHolidaysGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['countryIsoCode'] != null) {
            queryParameters['countryIsoCode'] = requestParameters['countryIsoCode'];
        }

        if (requestParameters['subdivisionCode'] != null) {
            queryParameters['subdivisionCode'] = requestParameters['subdivisionCode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/PublicHolidays`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatisticsResponseFromJSON(jsonValue));
    }

    /**
     * Returns statistical data about public holidays for a given country.
     */
    async statisticsPublicHolidaysGet(requestParameters: StatisticsPublicHolidaysGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatisticsResponse> {
        const response = await this.statisticsPublicHolidaysGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns statistical data about school holidays for a given country
     */
    async statisticsSchoolHolidaysGetRaw(requestParameters: StatisticsSchoolHolidaysGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatisticsResponse>> {
        if (requestParameters['countryIsoCode'] == null) {
            throw new runtime.RequiredError(
                'countryIsoCode',
                'Required parameter "countryIsoCode" was null or undefined when calling statisticsSchoolHolidaysGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['countryIsoCode'] != null) {
            queryParameters['countryIsoCode'] = requestParameters['countryIsoCode'];
        }

        if (requestParameters['subdivisionCode'] != null) {
            queryParameters['subdivisionCode'] = requestParameters['subdivisionCode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Statistics/SchoolHolidays`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatisticsResponseFromJSON(jsonValue));
    }

    /**
     * Returns statistical data about school holidays for a given country
     */
    async statisticsSchoolHolidaysGet(requestParameters: StatisticsSchoolHolidaysGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatisticsResponse> {
        const response = await this.statisticsSchoolHolidaysGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
